<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 有道无术，尚可求；有术无道，止于术</title>
    <link>https://fusource.github.io/posts/</link>
    <description>Recent content in Posts on 有道无术，尚可求；有术无道，止于术</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 20 Jun 2023 11:33:44 +0800</lastBuildDate><atom:link href="https://fusource.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>数据库 MySQL安装初始化账户密码</title>
      <link>https://fusource.github.io/posts/18.%E6%95%B0%E6%8D%AE%E5%BA%93-MySQL%E5%AE%89%E8%A3%85%E5%88%9D%E5%A7%8B%E5%8C%96%E8%B4%A6%E6%88%B7%E5%AF%86%E7%A0%81/</link>
      <pubDate>Tue, 20 Jun 2023 11:33:44 +0800</pubDate>
      
      <guid>https://fusource.github.io/posts/18.%E6%95%B0%E6%8D%AE%E5%BA%93-MySQL%E5%AE%89%E8%A3%85%E5%88%9D%E5%A7%8B%E5%8C%96%E8%B4%A6%E6%88%B7%E5%AF%86%E7%A0%81/</guid>
      <description>Mysql安装后，会自动给root用户生成一个默认密码，一般安装过程中会有提示，但如果安装过程中没注意，那安装后就没法用root登录了。 其它</description>
    </item>
    
    <item>
      <title>数据库 主键、自增主键、主键索引、唯一索引概念区别与性能却别</title>
      <link>https://fusource.github.io/posts/17.%E6%95%B0%E6%8D%AE%E5%BA%93-%E4%B8%BB%E9%94%AE%E8%87%AA%E5%A2%9E%E4%B8%BB%E9%94%AE%E4%B8%BB%E9%94%AE%E7%B4%A2%E5%BC%95%E5%94%AF%E4%B8%80%E7%B4%A2%E5%BC%95%E6%A6%82%E5%BF%B5%E5%8C%BA%E5%88%AB%E4%B8%8E%E6%80%A7%E8%83%BD%E5%8D%B4%E5%88%AB/</link>
      <pubDate>Tue, 20 Jun 2023 10:51:58 +0800</pubDate>
      
      <guid>https://fusource.github.io/posts/17.%E6%95%B0%E6%8D%AE%E5%BA%93-%E4%B8%BB%E9%94%AE%E8%87%AA%E5%A2%9E%E4%B8%BB%E9%94%AE%E4%B8%BB%E9%94%AE%E7%B4%A2%E5%BC%95%E5%94%AF%E4%B8%80%E7%B4%A2%E5%BC%95%E6%A6%82%E5%BF%B5%E5%8C%BA%E5%88%AB%E4%B8%8E%E6%80%A7%E8%83%BD%E5%8D%B4%E5%88%AB/</guid>
      <description>概念区别： 主键： 指字段唯一不为空值的列。 主键索引：指的就是主键，主键没有明确的概念定义，主键既是约束，也是索引，主键是索引的一种，是唯一索引</description>
    </item>
    
    <item>
      <title>数据库 MySQL中查询磁盘空间</title>
      <link>https://fusource.github.io/posts/16.%E6%95%B0%E6%8D%AE%E5%BA%93-MySQL%E4%B8%AD%E6%9F%A5%E8%AF%A2%E7%A3%81%E7%9B%98%E7%A9%BA%E9%97%B4/</link>
      <pubDate>Tue, 20 Jun 2023 10:18:05 +0800</pubDate>
      
      <guid>https://fusource.github.io/posts/16.%E6%95%B0%E6%8D%AE%E5%BA%93-MySQL%E4%B8%AD%E6%9F%A5%E8%AF%A2%E7%A3%81%E7%9B%98%E7%A9%BA%E9%97%B4/</guid>
      <description>查询所有数据库占用磁盘空间大小的SQL语句： 1 select concat(truncate(sum(data_length)/1024/1024,2),&amp;#39; MB&amp;#39;) as data_size from information_schema.tables; 查询单个库中所有表磁盘占用大小的SQL语句： 1 2 3 4 5 6 select TABLE_SCHEMA, concat(truncate(sum(data_length)/1024/1024,2),&amp;#39; MB&amp;#39;) as data_size, concat(truncate(sum(index_length)/1024/1024,2),&amp;#39;MB&amp;#39;) as index_size from information_schema.tables group</description>
    </item>
    
    <item>
      <title>数据库 MySQL的集中优化方法</title>
      <link>https://fusource.github.io/posts/15.%E6%95%B0%E6%8D%AE%E5%BA%93-MySQL%E7%9A%84%E9%9B%86%E4%B8%AD%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%95/</link>
      <pubDate>Tue, 20 Jun 2023 10:04:09 +0800</pubDate>
      
      <guid>https://fusource.github.io/posts/15.%E6%95%B0%E6%8D%AE%E5%BA%93-MySQL%E7%9A%84%E9%9B%86%E4%B8%AD%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%95/</guid>
      <description>没索引与有索引的区别 优点： 当表中有大量记录时，若要对表进行查询，如果没用建立索引，搜索信息方式是全表搜索，是将所有记录一一取出，和查询条件进</description>
    </item>
    
    <item>
      <title>数据库 PHP实现MySQL事务处理的方法</title>
      <link>https://fusource.github.io/posts/14.%E6%95%B0%E6%8D%AE%E5%BA%93-PHP%E5%AE%9E%E7%8E%B0MySQL%E4%BA%8B%E5%8A%A1%E5%A4%84%E7%90%86%E7%9A%84%E6%96%B9%E6%B3%95/</link>
      <pubDate>Mon, 19 Jun 2023 17:20:49 +0800</pubDate>
      
      <guid>https://fusource.github.io/posts/14.%E6%95%B0%E6%8D%AE%E5%BA%93-PHP%E5%AE%9E%E7%8E%B0MySQL%E4%BA%8B%E5%8A%A1%E5%A4%84%E7%90%86%E7%9A%84%E6%96%B9%E6%B3%95/</guid>
      <description>MYSQL中只有INNODB和BDB类型的数据表才能支持事务处理！其他的类型是不支持的！ 可以通过SQL语句来更改，sql语句可以这样写： 1 ALTER</description>
    </item>
    
    <item>
      <title>数据库 MySQL存储引擎中的MyISAM和InnoDB</title>
      <link>https://fusource.github.io/posts/13.%E6%95%B0%E6%8D%AE%E5%BA%93-MySQL%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E%E4%B8%AD%E7%9A%84MyISAM%E5%92%8CInnoDB/</link>
      <pubDate>Mon, 19 Jun 2023 17:06:26 +0800</pubDate>
      
      <guid>https://fusource.github.io/posts/13.%E6%95%B0%E6%8D%AE%E5%BA%93-MySQL%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E%E4%B8%AD%E7%9A%84MyISAM%E5%92%8CInnoDB/</guid>
      <description>在使用MySQL的过程中对MyISAM和InnoDB这两个概念存在了些疑问，到底两者引擎有何分别一直是存在我心中的疑问。为了解开这个谜题，搜</description>
    </item>
    
    <item>
      <title>MySQL分表方法</title>
      <link>https://fusource.github.io/posts/12.%E6%95%B0%E6%8D%AE%E5%BA%93-MySQL%E5%88%86%E8%A1%A8%E6%96%B9%E6%B3%95/</link>
      <pubDate>Mon, 19 Jun 2023 15:15:13 +0800</pubDate>
      
      <guid>https://fusource.github.io/posts/12.%E6%95%B0%E6%8D%AE%E5%BA%93-MySQL%E5%88%86%E8%A1%A8%E6%96%B9%E6%B3%95/</guid>
      <description>一，先说一下为什么要分表 当一张的数据达到几百万时，你查询一次所花的时间会变多，如果有联合查询的话，我想有可能会死在那儿了。分表的目的就在于此</description>
    </item>
    
    <item>
      <title>数据库 MySQL分表和分区的区别</title>
      <link>https://fusource.github.io/posts/11.%E6%95%B0%E6%8D%AE%E5%BA%93-MySQL%E5%88%86%E8%A1%A8%E5%92%8C%E5%88%86%E5%8C%BA%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Mon, 19 Jun 2023 10:10:17 +0800</pubDate>
      
      <guid>https://fusource.github.io/posts/11.%E6%95%B0%E6%8D%AE%E5%BA%93-MySQL%E5%88%86%E8%A1%A8%E5%92%8C%E5%88%86%E5%8C%BA%E7%9A%84%E5%8C%BA%E5%88%AB/</guid>
      <description>一。什么是mysql分表，分区 什么是分表，从表面意思上看呢，就是把一张表分成N多个小表，具体请看mysql分表的3种方法 什么是分区，分区呢就</description>
    </item>
    
    <item>
      <title>数据库 MySQL索引的创建、删除和查看</title>
      <link>https://fusource.github.io/posts/10.%E6%95%B0%E6%8D%AE%E5%BA%93-MySQL%E7%B4%A2%E5%BC%95%E7%9A%84%E5%88%9B%E5%BB%BA%E5%88%A0%E9%99%A4%E5%92%8C%E6%9F%A5%E7%9C%8B/</link>
      <pubDate>Thu, 15 Jun 2023 15:01:43 +0800</pubDate>
      
      <guid>https://fusource.github.io/posts/10.%E6%95%B0%E6%8D%AE%E5%BA%93-MySQL%E7%B4%A2%E5%BC%95%E7%9A%84%E5%88%9B%E5%BB%BA%E5%88%A0%E9%99%A4%E5%92%8C%E6%9F%A5%E7%9C%8B/</guid>
      <description>https://sunzhy.blog.csdn.net/article/details/46337239 索引的作用 在索引列上，除了上面提到的有序查找之外，数据库利用各种各样的快速定位技术，能够大大提高查询效率。特别是当数据量非常大，查询涉及多</description>
    </item>
    
    <item>
      <title>数据库:理论基础</title>
      <link>https://fusource.github.io/posts/9.%E6%95%B0%E6%8D%AE%E5%BA%93-%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Wed, 14 Jun 2023 14:45:36 +0800</pubDate>
      
      <guid>https://fusource.github.io/posts/9.%E6%95%B0%E6%8D%AE%E5%BA%93-%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/</guid>
      <description>SQL查询引擎概述-关系模型与查询优化 一、SQL语句分类 关系模型-&amp;gt;关系代数(过程式)-&amp;gt;SQL(声明式) SQL语句分类 SQL-&amp;gt;AST-&amp;gt;Logical Plan Tree-&amp;gt;Physical Plan</description>
    </item>
    
    <item>
      <title>设计模式：工厂模式</title>
      <link>https://fusource.github.io/posts/8.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Mon, 12 Jun 2023 10:11:55 +0800</pubDate>
      
      <guid>https://fusource.github.io/posts/8.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</guid>
      <description>1.简单工厂模式一： 大部分工厂类都是以&amp;quot;Factory&amp;quot;结尾，也不是必须，一般会结合语义场景来定义命名。有create开</description>
    </item>
    
    <item>
      <title>常用库系列之:sqlc</title>
      <link>https://fusource.github.io/posts/7.%E5%B8%B8%E7%94%A8%E5%BA%93%E7%B3%BB%E5%88%97%E4%B9%8Bsqlc/</link>
      <pubDate>Thu, 25 May 2023 15:12:45 +0800</pubDate>
      
      <guid>https://fusource.github.io/posts/7.%E5%B8%B8%E7%94%A8%E5%BA%93%E7%B3%BB%E5%88%97%E4%B9%8Bsqlc/</guid>
      <description>1. 作用 根据编写的sql语句生成go语言的调用代码 sqlc官网 2. 安装sqlc 安装方式： 平台 安装指令 macOS brew install sqlc ubuntu sudo snap install sqlc Go&amp;gt;=1.17 go install github.com/kyleconroy/sqlc/cmd/sqlc@latest Go&amp;lt;1.17 go get github.com/kyleconroy/sqlc/cmd/sqlc Docker docker pull kjconroy/sqlc downloads</description>
    </item>
    
    <item>
      <title>设计模式：单例模式</title>
      <link>https://fusource.github.io/posts/6.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Wed, 24 May 2023 09:24:23 +0800</pubDate>
      
      <guid>https://fusource.github.io/posts/6.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</guid>
      <description>定义 单例设计模式(Singleton Design Pattern):在应用作用域中，类只允许创建一个实例(对象) 如何实现一个单例？ 实现一个单例，需要关注</description>
    </item>
    
    <item>
      <title>GIN 1.gin系列源码学习</title>
      <link>https://fusource.github.io/posts/GIN-1.gin%E7%B3%BB%E5%88%97%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Mon, 22 May 2023 11:28:55 +0800</pubDate>
      
      <guid>https://fusource.github.io/posts/GIN-1.gin%E7%B3%BB%E5%88%97%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/</guid>
      <description></description>
    </item>
    
    <item>
      <title>设计模式：开篇</title>
      <link>https://fusource.github.io/posts/5.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%BC%80%E7%AF%87/</link>
      <pubDate>Mon, 22 May 2023 11:26:49 +0800</pubDate>
      
      <guid>https://fusource.github.io/posts/5.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%BC%80%E7%AF%87/</guid>
      <description>1. 从无到有 这个标题甚是抽象,也有点夸大其词了。初入代码这一行， 终究是以需求为导向，以实现功能为目标，以效率为评判标准。在过去相当一段时间里，</description>
    </item>
    
    <item>
      <title>Powerdesigner使用</title>
      <link>https://fusource.github.io/posts/4.powerdesigner%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Mon, 22 May 2023 11:26:11 +0800</pubDate>
      
      <guid>https://fusource.github.io/posts/4.powerdesigner%E4%BD%BF%E7%94%A8/</guid>
      <description>PowerDesinger数据建模的浅谈 1.建立新模型 2.选择建立物理数据模型: 可以选择使用的数据库语言 3.建立表: 左键点击Table这个图</description>
    </item>
    
    <item>
      <title>Vscode Vim 1常用指令</title>
      <link>https://fusource.github.io/posts/3.vscode-vim-1%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</link>
      <pubDate>Mon, 22 May 2023 11:26:01 +0800</pubDate>
      
      <guid>https://fusource.github.io/posts/3.vscode-vim-1%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</guid>
      <description>1. Vim键盘图 2. vim常用指令</description>
    </item>
    
    <item>
      <title>MD-1.基础语法-常用</title>
      <link>https://fusource.github.io/posts/2.MD%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E6%80%BB%E7%BB%93/</link>
      <pubDate>Mon, 15 May 2023 17:43:23 +0800</pubDate>
      
      <guid>https://fusource.github.io/posts/2.MD%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E6%80%BB%E7%BB%93/</guid>
      <description>一、标题定义 语法1：# [content] 等效（# [content] #) eg: # Content 一级标题 ## Content 二级标题 ### Content 三级标题 #### Content 四级标题 ##### Content 五级标题 ###### Content 六级标题 语法2：===（1级标题）或者</description>
    </item>
    
    <item>
      <title>UML-1.使用教程随记</title>
      <link>https://fusource.github.io/posts/1.UML%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B%E9%9A%8F%E8%AE%B0-1/</link>
      <pubDate>Mon, 15 May 2023 09:59:55 +0800</pubDate>
      
      <guid>https://fusource.github.io/posts/1.UML%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B%E9%9A%8F%E8%AE%B0-1/</guid>
      <description>1.什么是类图： 类图展示了面向对象系统的构造模块。描绘了模型或部分模型的静态视图，显示它包含的属性和行为，而不是详细描述操作的功能或完善的方</description>
    </item>
    
  </channel>
</rss>
